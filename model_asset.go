/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oomnitza

import (
	"encoding/json"
)

// Asset struct for Asset
type Asset struct {
	EquipmentId *string `json:"equipment_id,omitempty"`
	Version *string `json:"version,omitempty"`
	CreationDate *int32 `json:"creation_date,omitempty"`
	ChangeDate *int32 `json:"change_date,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	ChangedBy *string `json:"changed_by,omitempty"`
	Location *string `json:"location,omitempty"`
	Stockroom *string `json:"stockroom,omitempty"`
	AssignedTo *string `json:"assigned_to,omitempty"`
	Tickets *string `json:"tickets,omitempty"`
	IsParent *string `json:"is_parent,omitempty"`
	IsChild *string `json:"is_child,omitempty"`
	Barcode *string `json:"barcode,omitempty"`
	Deleted *string `json:"deleted,omitempty"`
	OperatingSystem *string `json:"operating_system,omitempty"`
	AssetType *string `json:"asset_type,omitempty"`
	EndOfLifeDate *int32 `json:"end_of_life_date,omitempty"`
	SerialNumber *string `json:"serial_number,omitempty"`
	Department *string `json:"department,omitempty"`
	Status *string `json:"status,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	Model *string `json:"model,omitempty"`
	DeviceName *string `json:"device_name,omitempty"`
	CurrentlyLoggedInUser *string `json:"currently_logged_in_user,omitempty"`
	IpAddress *string `json:"ip_address,omitempty"`
	MacAddress *string `json:"mac_address,omitempty"`
	ImeiMeid *string `json:"imei__meid,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	PurchaseDate *int32 `json:"purchase_date,omitempty"`
	PoNumber *string `json:"po_number,omitempty"`
	PurchasePrice *float32 `json:"purchase_price,omitempty"`
	WarrantyEndDate *int32 `json:"warranty_end_date,omitempty"`
	Cpu *string `json:"cpu,omitempty"`
	LoanDueDate *int32 `json:"loan_due_date,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Condition *string `json:"condition,omitempty"`
	Uid *string `json:"uid,omitempty"`
}

// NewAsset instantiates a new Asset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsset() *Asset {
	this := Asset{}
	return &this
}

// NewAssetWithDefaults instantiates a new Asset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetWithDefaults() *Asset {
	this := Asset{}
	return &this
}

// GetEquipmentId returns the EquipmentId field value if set, zero value otherwise.
func (o *Asset) GetEquipmentId() string {
	if o == nil || o.EquipmentId == nil {
		var ret string
		return ret
	}
	return *o.EquipmentId
}

// GetEquipmentIdOk returns a tuple with the EquipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetEquipmentIdOk() (*string, bool) {
	if o == nil || o.EquipmentId == nil {
		return nil, false
	}
	return o.EquipmentId, true
}

// HasEquipmentId returns a boolean if a field has been set.
func (o *Asset) HasEquipmentId() bool {
	if o != nil && o.EquipmentId != nil {
		return true
	}

	return false
}

// SetEquipmentId gets a reference to the given string and assigns it to the EquipmentId field.
func (o *Asset) SetEquipmentId(v string) {
	o.EquipmentId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Asset) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Asset) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Asset) SetVersion(v string) {
	o.Version = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *Asset) GetCreationDate() int32 {
	if o == nil || o.CreationDate == nil {
		var ret int32
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetCreationDateOk() (*int32, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *Asset) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int32 and assigns it to the CreationDate field.
func (o *Asset) SetCreationDate(v int32) {
	o.CreationDate = &v
}

// GetChangeDate returns the ChangeDate field value if set, zero value otherwise.
func (o *Asset) GetChangeDate() int32 {
	if o == nil || o.ChangeDate == nil {
		var ret int32
		return ret
	}
	return *o.ChangeDate
}

// GetChangeDateOk returns a tuple with the ChangeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetChangeDateOk() (*int32, bool) {
	if o == nil || o.ChangeDate == nil {
		return nil, false
	}
	return o.ChangeDate, true
}

// HasChangeDate returns a boolean if a field has been set.
func (o *Asset) HasChangeDate() bool {
	if o != nil && o.ChangeDate != nil {
		return true
	}

	return false
}

// SetChangeDate gets a reference to the given int32 and assigns it to the ChangeDate field.
func (o *Asset) SetChangeDate(v int32) {
	o.ChangeDate = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Asset) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Asset) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Asset) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetChangedBy returns the ChangedBy field value if set, zero value otherwise.
func (o *Asset) GetChangedBy() string {
	if o == nil || o.ChangedBy == nil {
		var ret string
		return ret
	}
	return *o.ChangedBy
}

// GetChangedByOk returns a tuple with the ChangedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetChangedByOk() (*string, bool) {
	if o == nil || o.ChangedBy == nil {
		return nil, false
	}
	return o.ChangedBy, true
}

// HasChangedBy returns a boolean if a field has been set.
func (o *Asset) HasChangedBy() bool {
	if o != nil && o.ChangedBy != nil {
		return true
	}

	return false
}

// SetChangedBy gets a reference to the given string and assigns it to the ChangedBy field.
func (o *Asset) SetChangedBy(v string) {
	o.ChangedBy = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *Asset) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *Asset) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *Asset) SetLocation(v string) {
	o.Location = &v
}

// GetStockroom returns the Stockroom field value if set, zero value otherwise.
func (o *Asset) GetStockroom() string {
	if o == nil || o.Stockroom == nil {
		var ret string
		return ret
	}
	return *o.Stockroom
}

// GetStockroomOk returns a tuple with the Stockroom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetStockroomOk() (*string, bool) {
	if o == nil || o.Stockroom == nil {
		return nil, false
	}
	return o.Stockroom, true
}

// HasStockroom returns a boolean if a field has been set.
func (o *Asset) HasStockroom() bool {
	if o != nil && o.Stockroom != nil {
		return true
	}

	return false
}

// SetStockroom gets a reference to the given string and assigns it to the Stockroom field.
func (o *Asset) SetStockroom(v string) {
	o.Stockroom = &v
}

// GetAssignedTo returns the AssignedTo field value if set, zero value otherwise.
func (o *Asset) GetAssignedTo() string {
	if o == nil || o.AssignedTo == nil {
		var ret string
		return ret
	}
	return *o.AssignedTo
}

// GetAssignedToOk returns a tuple with the AssignedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAssignedToOk() (*string, bool) {
	if o == nil || o.AssignedTo == nil {
		return nil, false
	}
	return o.AssignedTo, true
}

// HasAssignedTo returns a boolean if a field has been set.
func (o *Asset) HasAssignedTo() bool {
	if o != nil && o.AssignedTo != nil {
		return true
	}

	return false
}

// SetAssignedTo gets a reference to the given string and assigns it to the AssignedTo field.
func (o *Asset) SetAssignedTo(v string) {
	o.AssignedTo = &v
}

// GetTickets returns the Tickets field value if set, zero value otherwise.
func (o *Asset) GetTickets() string {
	if o == nil || o.Tickets == nil {
		var ret string
		return ret
	}
	return *o.Tickets
}

// GetTicketsOk returns a tuple with the Tickets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetTicketsOk() (*string, bool) {
	if o == nil || o.Tickets == nil {
		return nil, false
	}
	return o.Tickets, true
}

// HasTickets returns a boolean if a field has been set.
func (o *Asset) HasTickets() bool {
	if o != nil && o.Tickets != nil {
		return true
	}

	return false
}

// SetTickets gets a reference to the given string and assigns it to the Tickets field.
func (o *Asset) SetTickets(v string) {
	o.Tickets = &v
}

// GetIsParent returns the IsParent field value if set, zero value otherwise.
func (o *Asset) GetIsParent() string {
	if o == nil || o.IsParent == nil {
		var ret string
		return ret
	}
	return *o.IsParent
}

// GetIsParentOk returns a tuple with the IsParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetIsParentOk() (*string, bool) {
	if o == nil || o.IsParent == nil {
		return nil, false
	}
	return o.IsParent, true
}

// HasIsParent returns a boolean if a field has been set.
func (o *Asset) HasIsParent() bool {
	if o != nil && o.IsParent != nil {
		return true
	}

	return false
}

// SetIsParent gets a reference to the given string and assigns it to the IsParent field.
func (o *Asset) SetIsParent(v string) {
	o.IsParent = &v
}

// GetIsChild returns the IsChild field value if set, zero value otherwise.
func (o *Asset) GetIsChild() string {
	if o == nil || o.IsChild == nil {
		var ret string
		return ret
	}
	return *o.IsChild
}

// GetIsChildOk returns a tuple with the IsChild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetIsChildOk() (*string, bool) {
	if o == nil || o.IsChild == nil {
		return nil, false
	}
	return o.IsChild, true
}

// HasIsChild returns a boolean if a field has been set.
func (o *Asset) HasIsChild() bool {
	if o != nil && o.IsChild != nil {
		return true
	}

	return false
}

// SetIsChild gets a reference to the given string and assigns it to the IsChild field.
func (o *Asset) SetIsChild(v string) {
	o.IsChild = &v
}

// GetBarcode returns the Barcode field value if set, zero value otherwise.
func (o *Asset) GetBarcode() string {
	if o == nil || o.Barcode == nil {
		var ret string
		return ret
	}
	return *o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetBarcodeOk() (*string, bool) {
	if o == nil || o.Barcode == nil {
		return nil, false
	}
	return o.Barcode, true
}

// HasBarcode returns a boolean if a field has been set.
func (o *Asset) HasBarcode() bool {
	if o != nil && o.Barcode != nil {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given string and assigns it to the Barcode field.
func (o *Asset) SetBarcode(v string) {
	o.Barcode = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Asset) GetDeleted() string {
	if o == nil || o.Deleted == nil {
		var ret string
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDeletedOk() (*string, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Asset) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given string and assigns it to the Deleted field.
func (o *Asset) SetDeleted(v string) {
	o.Deleted = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *Asset) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetOperatingSystemOk() (*string, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *Asset) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *Asset) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *Asset) GetAssetType() string {
	if o == nil || o.AssetType == nil {
		var ret string
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAssetTypeOk() (*string, bool) {
	if o == nil || o.AssetType == nil {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *Asset) HasAssetType() bool {
	if o != nil && o.AssetType != nil {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given string and assigns it to the AssetType field.
func (o *Asset) SetAssetType(v string) {
	o.AssetType = &v
}

// GetEndOfLifeDate returns the EndOfLifeDate field value if set, zero value otherwise.
func (o *Asset) GetEndOfLifeDate() int32 {
	if o == nil || o.EndOfLifeDate == nil {
		var ret int32
		return ret
	}
	return *o.EndOfLifeDate
}

// GetEndOfLifeDateOk returns a tuple with the EndOfLifeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetEndOfLifeDateOk() (*int32, bool) {
	if o == nil || o.EndOfLifeDate == nil {
		return nil, false
	}
	return o.EndOfLifeDate, true
}

// HasEndOfLifeDate returns a boolean if a field has been set.
func (o *Asset) HasEndOfLifeDate() bool {
	if o != nil && o.EndOfLifeDate != nil {
		return true
	}

	return false
}

// SetEndOfLifeDate gets a reference to the given int32 and assigns it to the EndOfLifeDate field.
func (o *Asset) SetEndOfLifeDate(v int32) {
	o.EndOfLifeDate = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *Asset) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *Asset) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *Asset) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *Asset) GetDepartment() string {
	if o == nil || o.Department == nil {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDepartmentOk() (*string, bool) {
	if o == nil || o.Department == nil {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *Asset) HasDepartment() bool {
	if o != nil && o.Department != nil {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *Asset) SetDepartment(v string) {
	o.Department = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Asset) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Asset) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Asset) SetStatus(v string) {
	o.Status = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *Asset) GetManufacturer() string {
	if o == nil || o.Manufacturer == nil {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetManufacturerOk() (*string, bool) {
	if o == nil || o.Manufacturer == nil {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *Asset) HasManufacturer() bool {
	if o != nil && o.Manufacturer != nil {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *Asset) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *Asset) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *Asset) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *Asset) SetModel(v string) {
	o.Model = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *Asset) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *Asset) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *Asset) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetCurrentlyLoggedInUser returns the CurrentlyLoggedInUser field value if set, zero value otherwise.
func (o *Asset) GetCurrentlyLoggedInUser() string {
	if o == nil || o.CurrentlyLoggedInUser == nil {
		var ret string
		return ret
	}
	return *o.CurrentlyLoggedInUser
}

// GetCurrentlyLoggedInUserOk returns a tuple with the CurrentlyLoggedInUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetCurrentlyLoggedInUserOk() (*string, bool) {
	if o == nil || o.CurrentlyLoggedInUser == nil {
		return nil, false
	}
	return o.CurrentlyLoggedInUser, true
}

// HasCurrentlyLoggedInUser returns a boolean if a field has been set.
func (o *Asset) HasCurrentlyLoggedInUser() bool {
	if o != nil && o.CurrentlyLoggedInUser != nil {
		return true
	}

	return false
}

// SetCurrentlyLoggedInUser gets a reference to the given string and assigns it to the CurrentlyLoggedInUser field.
func (o *Asset) SetCurrentlyLoggedInUser(v string) {
	o.CurrentlyLoggedInUser = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *Asset) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *Asset) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *Asset) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *Asset) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *Asset) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *Asset) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetImeiMeid returns the ImeiMeid field value if set, zero value otherwise.
func (o *Asset) GetImeiMeid() string {
	if o == nil || o.ImeiMeid == nil {
		var ret string
		return ret
	}
	return *o.ImeiMeid
}

// GetImeiMeidOk returns a tuple with the ImeiMeid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetImeiMeidOk() (*string, bool) {
	if o == nil || o.ImeiMeid == nil {
		return nil, false
	}
	return o.ImeiMeid, true
}

// HasImeiMeid returns a boolean if a field has been set.
func (o *Asset) HasImeiMeid() bool {
	if o != nil && o.ImeiMeid != nil {
		return true
	}

	return false
}

// SetImeiMeid gets a reference to the given string and assigns it to the ImeiMeid field.
func (o *Asset) SetImeiMeid(v string) {
	o.ImeiMeid = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *Asset) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *Asset) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *Asset) SetVendor(v string) {
	o.Vendor = &v
}

// GetPurchaseDate returns the PurchaseDate field value if set, zero value otherwise.
func (o *Asset) GetPurchaseDate() int32 {
	if o == nil || o.PurchaseDate == nil {
		var ret int32
		return ret
	}
	return *o.PurchaseDate
}

// GetPurchaseDateOk returns a tuple with the PurchaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetPurchaseDateOk() (*int32, bool) {
	if o == nil || o.PurchaseDate == nil {
		return nil, false
	}
	return o.PurchaseDate, true
}

// HasPurchaseDate returns a boolean if a field has been set.
func (o *Asset) HasPurchaseDate() bool {
	if o != nil && o.PurchaseDate != nil {
		return true
	}

	return false
}

// SetPurchaseDate gets a reference to the given int32 and assigns it to the PurchaseDate field.
func (o *Asset) SetPurchaseDate(v int32) {
	o.PurchaseDate = &v
}

// GetPoNumber returns the PoNumber field value if set, zero value otherwise.
func (o *Asset) GetPoNumber() string {
	if o == nil || o.PoNumber == nil {
		var ret string
		return ret
	}
	return *o.PoNumber
}

// GetPoNumberOk returns a tuple with the PoNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetPoNumberOk() (*string, bool) {
	if o == nil || o.PoNumber == nil {
		return nil, false
	}
	return o.PoNumber, true
}

// HasPoNumber returns a boolean if a field has been set.
func (o *Asset) HasPoNumber() bool {
	if o != nil && o.PoNumber != nil {
		return true
	}

	return false
}

// SetPoNumber gets a reference to the given string and assigns it to the PoNumber field.
func (o *Asset) SetPoNumber(v string) {
	o.PoNumber = &v
}

// GetPurchasePrice returns the PurchasePrice field value if set, zero value otherwise.
func (o *Asset) GetPurchasePrice() float32 {
	if o == nil || o.PurchasePrice == nil {
		var ret float32
		return ret
	}
	return *o.PurchasePrice
}

// GetPurchasePriceOk returns a tuple with the PurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetPurchasePriceOk() (*float32, bool) {
	if o == nil || o.PurchasePrice == nil {
		return nil, false
	}
	return o.PurchasePrice, true
}

// HasPurchasePrice returns a boolean if a field has been set.
func (o *Asset) HasPurchasePrice() bool {
	if o != nil && o.PurchasePrice != nil {
		return true
	}

	return false
}

// SetPurchasePrice gets a reference to the given float32 and assigns it to the PurchasePrice field.
func (o *Asset) SetPurchasePrice(v float32) {
	o.PurchasePrice = &v
}

// GetWarrantyEndDate returns the WarrantyEndDate field value if set, zero value otherwise.
func (o *Asset) GetWarrantyEndDate() int32 {
	if o == nil || o.WarrantyEndDate == nil {
		var ret int32
		return ret
	}
	return *o.WarrantyEndDate
}

// GetWarrantyEndDateOk returns a tuple with the WarrantyEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetWarrantyEndDateOk() (*int32, bool) {
	if o == nil || o.WarrantyEndDate == nil {
		return nil, false
	}
	return o.WarrantyEndDate, true
}

// HasWarrantyEndDate returns a boolean if a field has been set.
func (o *Asset) HasWarrantyEndDate() bool {
	if o != nil && o.WarrantyEndDate != nil {
		return true
	}

	return false
}

// SetWarrantyEndDate gets a reference to the given int32 and assigns it to the WarrantyEndDate field.
func (o *Asset) SetWarrantyEndDate(v int32) {
	o.WarrantyEndDate = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *Asset) GetCpu() string {
	if o == nil || o.Cpu == nil {
		var ret string
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetCpuOk() (*string, bool) {
	if o == nil || o.Cpu == nil {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *Asset) HasCpu() bool {
	if o != nil && o.Cpu != nil {
		return true
	}

	return false
}

// SetCpu gets a reference to the given string and assigns it to the Cpu field.
func (o *Asset) SetCpu(v string) {
	o.Cpu = &v
}

// GetLoanDueDate returns the LoanDueDate field value if set, zero value otherwise.
func (o *Asset) GetLoanDueDate() int32 {
	if o == nil || o.LoanDueDate == nil {
		var ret int32
		return ret
	}
	return *o.LoanDueDate
}

// GetLoanDueDateOk returns a tuple with the LoanDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetLoanDueDateOk() (*int32, bool) {
	if o == nil || o.LoanDueDate == nil {
		return nil, false
	}
	return o.LoanDueDate, true
}

// HasLoanDueDate returns a boolean if a field has been set.
func (o *Asset) HasLoanDueDate() bool {
	if o != nil && o.LoanDueDate != nil {
		return true
	}

	return false
}

// SetLoanDueDate gets a reference to the given int32 and assigns it to the LoanDueDate field.
func (o *Asset) SetLoanDueDate(v int32) {
	o.LoanDueDate = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Asset) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Asset) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Asset) SetNotes(v string) {
	o.Notes = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *Asset) GetCondition() string {
	if o == nil || o.Condition == nil {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetConditionOk() (*string, bool) {
	if o == nil || o.Condition == nil {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *Asset) HasCondition() bool {
	if o != nil && o.Condition != nil {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *Asset) SetCondition(v string) {
	o.Condition = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *Asset) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *Asset) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *Asset) SetUid(v string) {
	o.Uid = &v
}

func (o Asset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EquipmentId != nil {
		toSerialize["equipment_id"] = o.EquipmentId
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.CreationDate != nil {
		toSerialize["creation_date"] = o.CreationDate
	}
	if o.ChangeDate != nil {
		toSerialize["change_date"] = o.ChangeDate
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.ChangedBy != nil {
		toSerialize["changed_by"] = o.ChangedBy
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Stockroom != nil {
		toSerialize["stockroom"] = o.Stockroom
	}
	if o.AssignedTo != nil {
		toSerialize["assigned_to"] = o.AssignedTo
	}
	if o.Tickets != nil {
		toSerialize["tickets"] = o.Tickets
	}
	if o.IsParent != nil {
		toSerialize["is_parent"] = o.IsParent
	}
	if o.IsChild != nil {
		toSerialize["is_child"] = o.IsChild
	}
	if o.Barcode != nil {
		toSerialize["barcode"] = o.Barcode
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.OperatingSystem != nil {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if o.AssetType != nil {
		toSerialize["asset_type"] = o.AssetType
	}
	if o.EndOfLifeDate != nil {
		toSerialize["end_of_life_date"] = o.EndOfLifeDate
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.Department != nil {
		toSerialize["department"] = o.Department
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Manufacturer != nil {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.DeviceName != nil {
		toSerialize["device_name"] = o.DeviceName
	}
	if o.CurrentlyLoggedInUser != nil {
		toSerialize["currently_logged_in_user"] = o.CurrentlyLoggedInUser
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.MacAddress != nil {
		toSerialize["mac_address"] = o.MacAddress
	}
	if o.ImeiMeid != nil {
		toSerialize["imei__meid"] = o.ImeiMeid
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.PurchaseDate != nil {
		toSerialize["purchase_date"] = o.PurchaseDate
	}
	if o.PoNumber != nil {
		toSerialize["po_number"] = o.PoNumber
	}
	if o.PurchasePrice != nil {
		toSerialize["purchase_price"] = o.PurchasePrice
	}
	if o.WarrantyEndDate != nil {
		toSerialize["warranty_end_date"] = o.WarrantyEndDate
	}
	if o.Cpu != nil {
		toSerialize["cpu"] = o.Cpu
	}
	if o.LoanDueDate != nil {
		toSerialize["loan_due_date"] = o.LoanDueDate
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Condition != nil {
		toSerialize["condition"] = o.Condition
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	return json.Marshal(toSerialize)
}

type NullableAsset struct {
	value *Asset
	isSet bool
}

func (v NullableAsset) Get() *Asset {
	return v.value
}

func (v *NullableAsset) Set(val *Asset) {
	v.value = val
	v.isSet = true
}

func (v NullableAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsset(val *Asset) *NullableAsset {
	return &NullableAsset{value: val, isSet: true}
}

func (v NullableAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


