/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConnectorRunLogsPortionDetailsFileAttachment struct for ConnectorRunLogsPortionDetailsFileAttachment
type ConnectorRunLogsPortionDetailsFileAttachment struct {
	Filename *string `json:"filename,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewConnectorRunLogsPortionDetailsFileAttachment instantiates a new ConnectorRunLogsPortionDetailsFileAttachment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorRunLogsPortionDetailsFileAttachment() *ConnectorRunLogsPortionDetailsFileAttachment {
	this := ConnectorRunLogsPortionDetailsFileAttachment{}
	return &this
}

// NewConnectorRunLogsPortionDetailsFileAttachmentWithDefaults instantiates a new ConnectorRunLogsPortionDetailsFileAttachment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorRunLogsPortionDetailsFileAttachmentWithDefaults() *ConnectorRunLogsPortionDetailsFileAttachment {
	this := ConnectorRunLogsPortionDetailsFileAttachment{}
	return &this
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) SetFilename(v string) {
	o.Filename = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ConnectorRunLogsPortionDetailsFileAttachment) SetUrl(v string) {
	o.Url = &v
}

func (o ConnectorRunLogsPortionDetailsFileAttachment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorRunLogsPortionDetailsFileAttachment struct {
	value *ConnectorRunLogsPortionDetailsFileAttachment
	isSet bool
}

func (v NullableConnectorRunLogsPortionDetailsFileAttachment) Get() *ConnectorRunLogsPortionDetailsFileAttachment {
	return v.value
}

func (v *NullableConnectorRunLogsPortionDetailsFileAttachment) Set(val *ConnectorRunLogsPortionDetailsFileAttachment) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorRunLogsPortionDetailsFileAttachment) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorRunLogsPortionDetailsFileAttachment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorRunLogsPortionDetailsFileAttachment(val *ConnectorRunLogsPortionDetailsFileAttachment) *NullableConnectorRunLogsPortionDetailsFileAttachment {
	return &NullableConnectorRunLogsPortionDetailsFileAttachment{value: val, isSet: true}
}

func (v NullableConnectorRunLogsPortionDetailsFileAttachment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorRunLogsPortionDetailsFileAttachment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


