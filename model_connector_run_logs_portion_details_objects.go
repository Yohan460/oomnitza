/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConnectorRunLogsPortionDetailsObjects struct for ConnectorRunLogsPortionDetailsObjects
type ConnectorRunLogsPortionDetailsObjects struct {
	Updated *int32 `json:"updated,omitempty"`
	Added *int32 `json:"added,omitempty"`
	Failed *int32 `json:"failed,omitempty"`
	Skipped *int32 `json:"skipped,omitempty"`
	Unchanged *int32 `json:"unchanged,omitempty"`
	Canceled *int32 `json:"canceled,omitempty"`
	Processing *int32 `json:"processing,omitempty"`
}

// NewConnectorRunLogsPortionDetailsObjects instantiates a new ConnectorRunLogsPortionDetailsObjects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorRunLogsPortionDetailsObjects() *ConnectorRunLogsPortionDetailsObjects {
	this := ConnectorRunLogsPortionDetailsObjects{}
	return &this
}

// NewConnectorRunLogsPortionDetailsObjectsWithDefaults instantiates a new ConnectorRunLogsPortionDetailsObjects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorRunLogsPortionDetailsObjectsWithDefaults() *ConnectorRunLogsPortionDetailsObjects {
	this := ConnectorRunLogsPortionDetailsObjects{}
	return &this
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsObjects) GetUpdated() int32 {
	if o == nil || o.Updated == nil {
		var ret int32
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) GetUpdatedOk() (*int32, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given int32 and assigns it to the Updated field.
func (o *ConnectorRunLogsPortionDetailsObjects) SetUpdated(v int32) {
	o.Updated = &v
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsObjects) GetAdded() int32 {
	if o == nil || o.Added == nil {
		var ret int32
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) GetAddedOk() (*int32, bool) {
	if o == nil || o.Added == nil {
		return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) HasAdded() bool {
	if o != nil && o.Added != nil {
		return true
	}

	return false
}

// SetAdded gets a reference to the given int32 and assigns it to the Added field.
func (o *ConnectorRunLogsPortionDetailsObjects) SetAdded(v int32) {
	o.Added = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsObjects) GetFailed() int32 {
	if o == nil || o.Failed == nil {
		var ret int32
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) GetFailedOk() (*int32, bool) {
	if o == nil || o.Failed == nil {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) HasFailed() bool {
	if o != nil && o.Failed != nil {
		return true
	}

	return false
}

// SetFailed gets a reference to the given int32 and assigns it to the Failed field.
func (o *ConnectorRunLogsPortionDetailsObjects) SetFailed(v int32) {
	o.Failed = &v
}

// GetSkipped returns the Skipped field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsObjects) GetSkipped() int32 {
	if o == nil || o.Skipped == nil {
		var ret int32
		return ret
	}
	return *o.Skipped
}

// GetSkippedOk returns a tuple with the Skipped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) GetSkippedOk() (*int32, bool) {
	if o == nil || o.Skipped == nil {
		return nil, false
	}
	return o.Skipped, true
}

// HasSkipped returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) HasSkipped() bool {
	if o != nil && o.Skipped != nil {
		return true
	}

	return false
}

// SetSkipped gets a reference to the given int32 and assigns it to the Skipped field.
func (o *ConnectorRunLogsPortionDetailsObjects) SetSkipped(v int32) {
	o.Skipped = &v
}

// GetUnchanged returns the Unchanged field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsObjects) GetUnchanged() int32 {
	if o == nil || o.Unchanged == nil {
		var ret int32
		return ret
	}
	return *o.Unchanged
}

// GetUnchangedOk returns a tuple with the Unchanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) GetUnchangedOk() (*int32, bool) {
	if o == nil || o.Unchanged == nil {
		return nil, false
	}
	return o.Unchanged, true
}

// HasUnchanged returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) HasUnchanged() bool {
	if o != nil && o.Unchanged != nil {
		return true
	}

	return false
}

// SetUnchanged gets a reference to the given int32 and assigns it to the Unchanged field.
func (o *ConnectorRunLogsPortionDetailsObjects) SetUnchanged(v int32) {
	o.Unchanged = &v
}

// GetCanceled returns the Canceled field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsObjects) GetCanceled() int32 {
	if o == nil || o.Canceled == nil {
		var ret int32
		return ret
	}
	return *o.Canceled
}

// GetCanceledOk returns a tuple with the Canceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) GetCanceledOk() (*int32, bool) {
	if o == nil || o.Canceled == nil {
		return nil, false
	}
	return o.Canceled, true
}

// HasCanceled returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) HasCanceled() bool {
	if o != nil && o.Canceled != nil {
		return true
	}

	return false
}

// SetCanceled gets a reference to the given int32 and assigns it to the Canceled field.
func (o *ConnectorRunLogsPortionDetailsObjects) SetCanceled(v int32) {
	o.Canceled = &v
}

// GetProcessing returns the Processing field value if set, zero value otherwise.
func (o *ConnectorRunLogsPortionDetailsObjects) GetProcessing() int32 {
	if o == nil || o.Processing == nil {
		var ret int32
		return ret
	}
	return *o.Processing
}

// GetProcessingOk returns a tuple with the Processing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) GetProcessingOk() (*int32, bool) {
	if o == nil || o.Processing == nil {
		return nil, false
	}
	return o.Processing, true
}

// HasProcessing returns a boolean if a field has been set.
func (o *ConnectorRunLogsPortionDetailsObjects) HasProcessing() bool {
	if o != nil && o.Processing != nil {
		return true
	}

	return false
}

// SetProcessing gets a reference to the given int32 and assigns it to the Processing field.
func (o *ConnectorRunLogsPortionDetailsObjects) SetProcessing(v int32) {
	o.Processing = &v
}

func (o ConnectorRunLogsPortionDetailsObjects) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Added != nil {
		toSerialize["added"] = o.Added
	}
	if o.Failed != nil {
		toSerialize["failed"] = o.Failed
	}
	if o.Skipped != nil {
		toSerialize["skipped"] = o.Skipped
	}
	if o.Unchanged != nil {
		toSerialize["unchanged"] = o.Unchanged
	}
	if o.Canceled != nil {
		toSerialize["canceled"] = o.Canceled
	}
	if o.Processing != nil {
		toSerialize["processing"] = o.Processing
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorRunLogsPortionDetailsObjects struct {
	value *ConnectorRunLogsPortionDetailsObjects
	isSet bool
}

func (v NullableConnectorRunLogsPortionDetailsObjects) Get() *ConnectorRunLogsPortionDetailsObjects {
	return v.value
}

func (v *NullableConnectorRunLogsPortionDetailsObjects) Set(val *ConnectorRunLogsPortionDetailsObjects) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorRunLogsPortionDetailsObjects) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorRunLogsPortionDetailsObjects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorRunLogsPortionDetailsObjects(val *ConnectorRunLogsPortionDetailsObjects) *NullableConnectorRunLogsPortionDetailsObjects {
	return &NullableConnectorRunLogsPortionDetailsObjects{value: val, isSet: true}
}

func (v NullableConnectorRunLogsPortionDetailsObjects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorRunLogsPortionDetailsObjects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


