/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oomnitza

import (
	"encoding/json"
)

// Contract struct for Contract
type Contract struct {
	ContractName *string `json:"contract_name,omitempty"`
	ContractType *string `json:"contract_type,omitempty"`
	SoftwareId *string `json:"software_id,omitempty"`
	SaasId *string `json:"saas_id,omitempty"`
	DefaultSaasContract *bool `json:"default_saas_contract,omitempty"`
	Price *float32 `json:"price,omitempty"`
	PaymentSchedule *string `json:"payment_schedule,omitempty"`
	RenewalDate *int32 `json:"renewal_date,omitempty"`
	ResponsiblePerson *string `json:"responsible_person,omitempty"`
	PaymentDate *int32 `json:"payment_date,omitempty"`
	Autorenewal *bool `json:"autorenewal,omitempty"`
	LimitNumberOfLicenses *bool `json:"limit_number_of_licenses,omitempty"`
	NumberOfLicenses *int32 `json:"number_of_licenses,omitempty"`
	NumberOfSeats *int32 `json:"number_of_seats,omitempty"`
	OversubscribeLicenses *bool `json:"oversubscribe_licenses,omitempty"`
	LicenseKey *string `json:"license_key,omitempty"`
	CalculatePerUserPrice *bool `json:"calculate_per_user_price,omitempty"`
	ChangeDate *int32 `json:"change_date,omitempty"`
	Version *string `json:"version,omitempty"`
	ChangedBy *string `json:"changed_by,omitempty"`
	CreationDate *int32 `json:"creation_date,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	LicensesInUse *int32 `json:"licenses_in_use,omitempty"`
	ContractId *string `json:"contract_id,omitempty"`
	Deleted *string `json:"deleted,omitempty"`
	Uid *int32 `json:"uid,omitempty"`
}

// NewContract instantiates a new Contract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContract() *Contract {
	this := Contract{}
	return &this
}

// NewContractWithDefaults instantiates a new Contract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractWithDefaults() *Contract {
	this := Contract{}
	return &this
}

// GetContractName returns the ContractName field value if set, zero value otherwise.
func (o *Contract) GetContractName() string {
	if o == nil || o.ContractName == nil {
		var ret string
		return ret
	}
	return *o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetContractNameOk() (*string, bool) {
	if o == nil || o.ContractName == nil {
		return nil, false
	}
	return o.ContractName, true
}

// HasContractName returns a boolean if a field has been set.
func (o *Contract) HasContractName() bool {
	if o != nil && o.ContractName != nil {
		return true
	}

	return false
}

// SetContractName gets a reference to the given string and assigns it to the ContractName field.
func (o *Contract) SetContractName(v string) {
	o.ContractName = &v
}

// GetContractType returns the ContractType field value if set, zero value otherwise.
func (o *Contract) GetContractType() string {
	if o == nil || o.ContractType == nil {
		var ret string
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetContractTypeOk() (*string, bool) {
	if o == nil || o.ContractType == nil {
		return nil, false
	}
	return o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *Contract) HasContractType() bool {
	if o != nil && o.ContractType != nil {
		return true
	}

	return false
}

// SetContractType gets a reference to the given string and assigns it to the ContractType field.
func (o *Contract) SetContractType(v string) {
	o.ContractType = &v
}

// GetSoftwareId returns the SoftwareId field value if set, zero value otherwise.
func (o *Contract) GetSoftwareId() string {
	if o == nil || o.SoftwareId == nil {
		var ret string
		return ret
	}
	return *o.SoftwareId
}

// GetSoftwareIdOk returns a tuple with the SoftwareId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetSoftwareIdOk() (*string, bool) {
	if o == nil || o.SoftwareId == nil {
		return nil, false
	}
	return o.SoftwareId, true
}

// HasSoftwareId returns a boolean if a field has been set.
func (o *Contract) HasSoftwareId() bool {
	if o != nil && o.SoftwareId != nil {
		return true
	}

	return false
}

// SetSoftwareId gets a reference to the given string and assigns it to the SoftwareId field.
func (o *Contract) SetSoftwareId(v string) {
	o.SoftwareId = &v
}

// GetSaasId returns the SaasId field value if set, zero value otherwise.
func (o *Contract) GetSaasId() string {
	if o == nil || o.SaasId == nil {
		var ret string
		return ret
	}
	return *o.SaasId
}

// GetSaasIdOk returns a tuple with the SaasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetSaasIdOk() (*string, bool) {
	if o == nil || o.SaasId == nil {
		return nil, false
	}
	return o.SaasId, true
}

// HasSaasId returns a boolean if a field has been set.
func (o *Contract) HasSaasId() bool {
	if o != nil && o.SaasId != nil {
		return true
	}

	return false
}

// SetSaasId gets a reference to the given string and assigns it to the SaasId field.
func (o *Contract) SetSaasId(v string) {
	o.SaasId = &v
}

// GetDefaultSaasContract returns the DefaultSaasContract field value if set, zero value otherwise.
func (o *Contract) GetDefaultSaasContract() bool {
	if o == nil || o.DefaultSaasContract == nil {
		var ret bool
		return ret
	}
	return *o.DefaultSaasContract
}

// GetDefaultSaasContractOk returns a tuple with the DefaultSaasContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDefaultSaasContractOk() (*bool, bool) {
	if o == nil || o.DefaultSaasContract == nil {
		return nil, false
	}
	return o.DefaultSaasContract, true
}

// HasDefaultSaasContract returns a boolean if a field has been set.
func (o *Contract) HasDefaultSaasContract() bool {
	if o != nil && o.DefaultSaasContract != nil {
		return true
	}

	return false
}

// SetDefaultSaasContract gets a reference to the given bool and assigns it to the DefaultSaasContract field.
func (o *Contract) SetDefaultSaasContract(v bool) {
	o.DefaultSaasContract = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Contract) GetPrice() float32 {
	if o == nil || o.Price == nil {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetPriceOk() (*float32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Contract) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *Contract) SetPrice(v float32) {
	o.Price = &v
}

// GetPaymentSchedule returns the PaymentSchedule field value if set, zero value otherwise.
func (o *Contract) GetPaymentSchedule() string {
	if o == nil || o.PaymentSchedule == nil {
		var ret string
		return ret
	}
	return *o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetPaymentScheduleOk() (*string, bool) {
	if o == nil || o.PaymentSchedule == nil {
		return nil, false
	}
	return o.PaymentSchedule, true
}

// HasPaymentSchedule returns a boolean if a field has been set.
func (o *Contract) HasPaymentSchedule() bool {
	if o != nil && o.PaymentSchedule != nil {
		return true
	}

	return false
}

// SetPaymentSchedule gets a reference to the given string and assigns it to the PaymentSchedule field.
func (o *Contract) SetPaymentSchedule(v string) {
	o.PaymentSchedule = &v
}

// GetRenewalDate returns the RenewalDate field value if set, zero value otherwise.
func (o *Contract) GetRenewalDate() int32 {
	if o == nil || o.RenewalDate == nil {
		var ret int32
		return ret
	}
	return *o.RenewalDate
}

// GetRenewalDateOk returns a tuple with the RenewalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetRenewalDateOk() (*int32, bool) {
	if o == nil || o.RenewalDate == nil {
		return nil, false
	}
	return o.RenewalDate, true
}

// HasRenewalDate returns a boolean if a field has been set.
func (o *Contract) HasRenewalDate() bool {
	if o != nil && o.RenewalDate != nil {
		return true
	}

	return false
}

// SetRenewalDate gets a reference to the given int32 and assigns it to the RenewalDate field.
func (o *Contract) SetRenewalDate(v int32) {
	o.RenewalDate = &v
}

// GetResponsiblePerson returns the ResponsiblePerson field value if set, zero value otherwise.
func (o *Contract) GetResponsiblePerson() string {
	if o == nil || o.ResponsiblePerson == nil {
		var ret string
		return ret
	}
	return *o.ResponsiblePerson
}

// GetResponsiblePersonOk returns a tuple with the ResponsiblePerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetResponsiblePersonOk() (*string, bool) {
	if o == nil || o.ResponsiblePerson == nil {
		return nil, false
	}
	return o.ResponsiblePerson, true
}

// HasResponsiblePerson returns a boolean if a field has been set.
func (o *Contract) HasResponsiblePerson() bool {
	if o != nil && o.ResponsiblePerson != nil {
		return true
	}

	return false
}

// SetResponsiblePerson gets a reference to the given string and assigns it to the ResponsiblePerson field.
func (o *Contract) SetResponsiblePerson(v string) {
	o.ResponsiblePerson = &v
}

// GetPaymentDate returns the PaymentDate field value if set, zero value otherwise.
func (o *Contract) GetPaymentDate() int32 {
	if o == nil || o.PaymentDate == nil {
		var ret int32
		return ret
	}
	return *o.PaymentDate
}

// GetPaymentDateOk returns a tuple with the PaymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetPaymentDateOk() (*int32, bool) {
	if o == nil || o.PaymentDate == nil {
		return nil, false
	}
	return o.PaymentDate, true
}

// HasPaymentDate returns a boolean if a field has been set.
func (o *Contract) HasPaymentDate() bool {
	if o != nil && o.PaymentDate != nil {
		return true
	}

	return false
}

// SetPaymentDate gets a reference to the given int32 and assigns it to the PaymentDate field.
func (o *Contract) SetPaymentDate(v int32) {
	o.PaymentDate = &v
}

// GetAutorenewal returns the Autorenewal field value if set, zero value otherwise.
func (o *Contract) GetAutorenewal() bool {
	if o == nil || o.Autorenewal == nil {
		var ret bool
		return ret
	}
	return *o.Autorenewal
}

// GetAutorenewalOk returns a tuple with the Autorenewal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetAutorenewalOk() (*bool, bool) {
	if o == nil || o.Autorenewal == nil {
		return nil, false
	}
	return o.Autorenewal, true
}

// HasAutorenewal returns a boolean if a field has been set.
func (o *Contract) HasAutorenewal() bool {
	if o != nil && o.Autorenewal != nil {
		return true
	}

	return false
}

// SetAutorenewal gets a reference to the given bool and assigns it to the Autorenewal field.
func (o *Contract) SetAutorenewal(v bool) {
	o.Autorenewal = &v
}

// GetLimitNumberOfLicenses returns the LimitNumberOfLicenses field value if set, zero value otherwise.
func (o *Contract) GetLimitNumberOfLicenses() bool {
	if o == nil || o.LimitNumberOfLicenses == nil {
		var ret bool
		return ret
	}
	return *o.LimitNumberOfLicenses
}

// GetLimitNumberOfLicensesOk returns a tuple with the LimitNumberOfLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetLimitNumberOfLicensesOk() (*bool, bool) {
	if o == nil || o.LimitNumberOfLicenses == nil {
		return nil, false
	}
	return o.LimitNumberOfLicenses, true
}

// HasLimitNumberOfLicenses returns a boolean if a field has been set.
func (o *Contract) HasLimitNumberOfLicenses() bool {
	if o != nil && o.LimitNumberOfLicenses != nil {
		return true
	}

	return false
}

// SetLimitNumberOfLicenses gets a reference to the given bool and assigns it to the LimitNumberOfLicenses field.
func (o *Contract) SetLimitNumberOfLicenses(v bool) {
	o.LimitNumberOfLicenses = &v
}

// GetNumberOfLicenses returns the NumberOfLicenses field value if set, zero value otherwise.
func (o *Contract) GetNumberOfLicenses() int32 {
	if o == nil || o.NumberOfLicenses == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfLicenses
}

// GetNumberOfLicensesOk returns a tuple with the NumberOfLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetNumberOfLicensesOk() (*int32, bool) {
	if o == nil || o.NumberOfLicenses == nil {
		return nil, false
	}
	return o.NumberOfLicenses, true
}

// HasNumberOfLicenses returns a boolean if a field has been set.
func (o *Contract) HasNumberOfLicenses() bool {
	if o != nil && o.NumberOfLicenses != nil {
		return true
	}

	return false
}

// SetNumberOfLicenses gets a reference to the given int32 and assigns it to the NumberOfLicenses field.
func (o *Contract) SetNumberOfLicenses(v int32) {
	o.NumberOfLicenses = &v
}

// GetNumberOfSeats returns the NumberOfSeats field value if set, zero value otherwise.
func (o *Contract) GetNumberOfSeats() int32 {
	if o == nil || o.NumberOfSeats == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfSeats
}

// GetNumberOfSeatsOk returns a tuple with the NumberOfSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetNumberOfSeatsOk() (*int32, bool) {
	if o == nil || o.NumberOfSeats == nil {
		return nil, false
	}
	return o.NumberOfSeats, true
}

// HasNumberOfSeats returns a boolean if a field has been set.
func (o *Contract) HasNumberOfSeats() bool {
	if o != nil && o.NumberOfSeats != nil {
		return true
	}

	return false
}

// SetNumberOfSeats gets a reference to the given int32 and assigns it to the NumberOfSeats field.
func (o *Contract) SetNumberOfSeats(v int32) {
	o.NumberOfSeats = &v
}

// GetOversubscribeLicenses returns the OversubscribeLicenses field value if set, zero value otherwise.
func (o *Contract) GetOversubscribeLicenses() bool {
	if o == nil || o.OversubscribeLicenses == nil {
		var ret bool
		return ret
	}
	return *o.OversubscribeLicenses
}

// GetOversubscribeLicensesOk returns a tuple with the OversubscribeLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetOversubscribeLicensesOk() (*bool, bool) {
	if o == nil || o.OversubscribeLicenses == nil {
		return nil, false
	}
	return o.OversubscribeLicenses, true
}

// HasOversubscribeLicenses returns a boolean if a field has been set.
func (o *Contract) HasOversubscribeLicenses() bool {
	if o != nil && o.OversubscribeLicenses != nil {
		return true
	}

	return false
}

// SetOversubscribeLicenses gets a reference to the given bool and assigns it to the OversubscribeLicenses field.
func (o *Contract) SetOversubscribeLicenses(v bool) {
	o.OversubscribeLicenses = &v
}

// GetLicenseKey returns the LicenseKey field value if set, zero value otherwise.
func (o *Contract) GetLicenseKey() string {
	if o == nil || o.LicenseKey == nil {
		var ret string
		return ret
	}
	return *o.LicenseKey
}

// GetLicenseKeyOk returns a tuple with the LicenseKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetLicenseKeyOk() (*string, bool) {
	if o == nil || o.LicenseKey == nil {
		return nil, false
	}
	return o.LicenseKey, true
}

// HasLicenseKey returns a boolean if a field has been set.
func (o *Contract) HasLicenseKey() bool {
	if o != nil && o.LicenseKey != nil {
		return true
	}

	return false
}

// SetLicenseKey gets a reference to the given string and assigns it to the LicenseKey field.
func (o *Contract) SetLicenseKey(v string) {
	o.LicenseKey = &v
}

// GetCalculatePerUserPrice returns the CalculatePerUserPrice field value if set, zero value otherwise.
func (o *Contract) GetCalculatePerUserPrice() bool {
	if o == nil || o.CalculatePerUserPrice == nil {
		var ret bool
		return ret
	}
	return *o.CalculatePerUserPrice
}

// GetCalculatePerUserPriceOk returns a tuple with the CalculatePerUserPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetCalculatePerUserPriceOk() (*bool, bool) {
	if o == nil || o.CalculatePerUserPrice == nil {
		return nil, false
	}
	return o.CalculatePerUserPrice, true
}

// HasCalculatePerUserPrice returns a boolean if a field has been set.
func (o *Contract) HasCalculatePerUserPrice() bool {
	if o != nil && o.CalculatePerUserPrice != nil {
		return true
	}

	return false
}

// SetCalculatePerUserPrice gets a reference to the given bool and assigns it to the CalculatePerUserPrice field.
func (o *Contract) SetCalculatePerUserPrice(v bool) {
	o.CalculatePerUserPrice = &v
}

// GetChangeDate returns the ChangeDate field value if set, zero value otherwise.
func (o *Contract) GetChangeDate() int32 {
	if o == nil || o.ChangeDate == nil {
		var ret int32
		return ret
	}
	return *o.ChangeDate
}

// GetChangeDateOk returns a tuple with the ChangeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetChangeDateOk() (*int32, bool) {
	if o == nil || o.ChangeDate == nil {
		return nil, false
	}
	return o.ChangeDate, true
}

// HasChangeDate returns a boolean if a field has been set.
func (o *Contract) HasChangeDate() bool {
	if o != nil && o.ChangeDate != nil {
		return true
	}

	return false
}

// SetChangeDate gets a reference to the given int32 and assigns it to the ChangeDate field.
func (o *Contract) SetChangeDate(v int32) {
	o.ChangeDate = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Contract) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Contract) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Contract) SetVersion(v string) {
	o.Version = &v
}

// GetChangedBy returns the ChangedBy field value if set, zero value otherwise.
func (o *Contract) GetChangedBy() string {
	if o == nil || o.ChangedBy == nil {
		var ret string
		return ret
	}
	return *o.ChangedBy
}

// GetChangedByOk returns a tuple with the ChangedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetChangedByOk() (*string, bool) {
	if o == nil || o.ChangedBy == nil {
		return nil, false
	}
	return o.ChangedBy, true
}

// HasChangedBy returns a boolean if a field has been set.
func (o *Contract) HasChangedBy() bool {
	if o != nil && o.ChangedBy != nil {
		return true
	}

	return false
}

// SetChangedBy gets a reference to the given string and assigns it to the ChangedBy field.
func (o *Contract) SetChangedBy(v string) {
	o.ChangedBy = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *Contract) GetCreationDate() int32 {
	if o == nil || o.CreationDate == nil {
		var ret int32
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetCreationDateOk() (*int32, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *Contract) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int32 and assigns it to the CreationDate field.
func (o *Contract) SetCreationDate(v int32) {
	o.CreationDate = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Contract) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Contract) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Contract) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLicensesInUse returns the LicensesInUse field value if set, zero value otherwise.
func (o *Contract) GetLicensesInUse() int32 {
	if o == nil || o.LicensesInUse == nil {
		var ret int32
		return ret
	}
	return *o.LicensesInUse
}

// GetLicensesInUseOk returns a tuple with the LicensesInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetLicensesInUseOk() (*int32, bool) {
	if o == nil || o.LicensesInUse == nil {
		return nil, false
	}
	return o.LicensesInUse, true
}

// HasLicensesInUse returns a boolean if a field has been set.
func (o *Contract) HasLicensesInUse() bool {
	if o != nil && o.LicensesInUse != nil {
		return true
	}

	return false
}

// SetLicensesInUse gets a reference to the given int32 and assigns it to the LicensesInUse field.
func (o *Contract) SetLicensesInUse(v int32) {
	o.LicensesInUse = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *Contract) GetContractId() string {
	if o == nil || o.ContractId == nil {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetContractIdOk() (*string, bool) {
	if o == nil || o.ContractId == nil {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *Contract) HasContractId() bool {
	if o != nil && o.ContractId != nil {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *Contract) SetContractId(v string) {
	o.ContractId = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Contract) GetDeleted() string {
	if o == nil || o.Deleted == nil {
		var ret string
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDeletedOk() (*string, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Contract) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given string and assigns it to the Deleted field.
func (o *Contract) SetDeleted(v string) {
	o.Deleted = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *Contract) GetUid() int32 {
	if o == nil || o.Uid == nil {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetUidOk() (*int32, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *Contract) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *Contract) SetUid(v int32) {
	o.Uid = &v
}

func (o Contract) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContractName != nil {
		toSerialize["contract_name"] = o.ContractName
	}
	if o.ContractType != nil {
		toSerialize["contract_type"] = o.ContractType
	}
	if o.SoftwareId != nil {
		toSerialize["software_id"] = o.SoftwareId
	}
	if o.SaasId != nil {
		toSerialize["saas_id"] = o.SaasId
	}
	if o.DefaultSaasContract != nil {
		toSerialize["default_saas_contract"] = o.DefaultSaasContract
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.PaymentSchedule != nil {
		toSerialize["payment_schedule"] = o.PaymentSchedule
	}
	if o.RenewalDate != nil {
		toSerialize["renewal_date"] = o.RenewalDate
	}
	if o.ResponsiblePerson != nil {
		toSerialize["responsible_person"] = o.ResponsiblePerson
	}
	if o.PaymentDate != nil {
		toSerialize["payment_date"] = o.PaymentDate
	}
	if o.Autorenewal != nil {
		toSerialize["autorenewal"] = o.Autorenewal
	}
	if o.LimitNumberOfLicenses != nil {
		toSerialize["limit_number_of_licenses"] = o.LimitNumberOfLicenses
	}
	if o.NumberOfLicenses != nil {
		toSerialize["number_of_licenses"] = o.NumberOfLicenses
	}
	if o.NumberOfSeats != nil {
		toSerialize["number_of_seats"] = o.NumberOfSeats
	}
	if o.OversubscribeLicenses != nil {
		toSerialize["oversubscribe_licenses"] = o.OversubscribeLicenses
	}
	if o.LicenseKey != nil {
		toSerialize["license_key"] = o.LicenseKey
	}
	if o.CalculatePerUserPrice != nil {
		toSerialize["calculate_per_user_price"] = o.CalculatePerUserPrice
	}
	if o.ChangeDate != nil {
		toSerialize["change_date"] = o.ChangeDate
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.ChangedBy != nil {
		toSerialize["changed_by"] = o.ChangedBy
	}
	if o.CreationDate != nil {
		toSerialize["creation_date"] = o.CreationDate
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.LicensesInUse != nil {
		toSerialize["licenses_in_use"] = o.LicensesInUse
	}
	if o.ContractId != nil {
		toSerialize["contract_id"] = o.ContractId
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	return json.Marshal(toSerialize)
}

type NullableContract struct {
	value *Contract
	isSet bool
}

func (v NullableContract) Get() *Contract {
	return v.value
}

func (v *NullableContract) Set(val *Contract) {
	v.value = val
	v.isSet = true
}

func (v NullableContract) IsSet() bool {
	return v.isSet
}

func (v *NullableContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContract(val *Contract) *NullableContract {
	return &NullableContract{value: val, isSet: true}
}

func (v NullableContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


