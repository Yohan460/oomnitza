/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CustomObject struct for CustomObject
type CustomObject struct {
	CustomObjectName string `json:"custom_object_name"`
	Description *string `json:"description,omitempty"`
	IsMainObject *bool `json:"is_main_object,omitempty"`
	Type string `json:"type"`
}

// NewCustomObject instantiates a new CustomObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomObject(customObjectName string, type_ string) *CustomObject {
	this := CustomObject{}
	this.CustomObjectName = customObjectName
	this.Type = type_
	return &this
}

// NewCustomObjectWithDefaults instantiates a new CustomObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomObjectWithDefaults() *CustomObject {
	this := CustomObject{}
	return &this
}

// GetCustomObjectName returns the CustomObjectName field value
func (o *CustomObject) GetCustomObjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomObjectName
}

// GetCustomObjectNameOk returns a tuple with the CustomObjectName field value
// and a boolean to check if the value has been set.
func (o *CustomObject) GetCustomObjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomObjectName, true
}

// SetCustomObjectName sets field value
func (o *CustomObject) SetCustomObjectName(v string) {
	o.CustomObjectName = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomObject) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomObject) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomObject) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomObject) SetDescription(v string) {
	o.Description = &v
}

// GetIsMainObject returns the IsMainObject field value if set, zero value otherwise.
func (o *CustomObject) GetIsMainObject() bool {
	if o == nil || o.IsMainObject == nil {
		var ret bool
		return ret
	}
	return *o.IsMainObject
}

// GetIsMainObjectOk returns a tuple with the IsMainObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomObject) GetIsMainObjectOk() (*bool, bool) {
	if o == nil || o.IsMainObject == nil {
		return nil, false
	}
	return o.IsMainObject, true
}

// HasIsMainObject returns a boolean if a field has been set.
func (o *CustomObject) HasIsMainObject() bool {
	if o != nil && o.IsMainObject != nil {
		return true
	}

	return false
}

// SetIsMainObject gets a reference to the given bool and assigns it to the IsMainObject field.
func (o *CustomObject) SetIsMainObject(v bool) {
	o.IsMainObject = &v
}

// GetType returns the Type field value
func (o *CustomObject) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CustomObject) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CustomObject) SetType(v string) {
	o.Type = v
}

func (o CustomObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["custom_object_name"] = o.CustomObjectName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IsMainObject != nil {
		toSerialize["is_main_object"] = o.IsMainObject
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableCustomObject struct {
	value *CustomObject
	isSet bool
}

func (v NullableCustomObject) Get() *CustomObject {
	return v.value
}

func (v *NullableCustomObject) Set(val *CustomObject) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomObject) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomObject(val *CustomObject) *NullableCustomObject {
	return &NullableCustomObject{value: val, isSet: true}
}

func (v NullableCustomObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


