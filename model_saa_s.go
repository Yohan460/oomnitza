/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SaaS struct for SaaS
type SaaS struct {
	SaasName string `json:"saas_name"`
	Linked string `json:"linked"`
	Category *string `json:"category,omitempty"`
	UsageStatistic *string `json:"usage_statistic,omitempty"`
	UsageHistory *string `json:"usage_history,omitempty"`
	LinkKey string `json:"link_key"`
	Publisher *string `json:"publisher,omitempty"`
	Url *string `json:"url,omitempty"`
	Source string `json:"source"`
	Ignored string `json:"ignored"`
	Version *string `json:"version,omitempty"`
	Visited *int32 `json:"visited,omitempty"`
	AvailableLicenses *int32 `json:"available_licenses,omitempty"`
	AnnualSpend *float32 `json:"annual_spend,omitempty"`
	RenewalDate *string `json:"renewal_date,omitempty"`
	Changedate string `json:"changedate"`
	Changedby string `json:"changedby"`
	Creationdate string `json:"creationdate"`
	Createdby string `json:"createdby"`
	SaasId *int32 `json:"saas_id,omitempty"`
	Hash bool `json:"hash"`
	TotalLicenses *int32 `json:"total_licenses,omitempty"`
	Deleted *string `json:"deleted,omitempty"`
	Uid *int32 `json:"uid,omitempty"`
	IsInf *bool `json:"is_inf,omitempty"`
}

// NewSaaS instantiates a new SaaS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaaS(saasName string, linked string, linkKey string, source string, ignored string, changedate string, changedby string, creationdate string, createdby string, hash bool) *SaaS {
	this := SaaS{}
	this.SaasName = saasName
	this.Linked = linked
	this.LinkKey = linkKey
	this.Source = source
	this.Ignored = ignored
	this.Changedate = changedate
	this.Changedby = changedby
	this.Creationdate = creationdate
	this.Createdby = createdby
	this.Hash = hash
	return &this
}

// NewSaaSWithDefaults instantiates a new SaaS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaaSWithDefaults() *SaaS {
	this := SaaS{}
	return &this
}

// GetSaasName returns the SaasName field value
func (o *SaaS) GetSaasName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SaasName
}

// GetSaasNameOk returns a tuple with the SaasName field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetSaasNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaasName, true
}

// SetSaasName sets field value
func (o *SaaS) SetSaasName(v string) {
	o.SaasName = v
}

// GetLinked returns the Linked field value
func (o *SaaS) GetLinked() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Linked
}

// GetLinkedOk returns a tuple with the Linked field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetLinkedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Linked, true
}

// SetLinked sets field value
func (o *SaaS) SetLinked(v string) {
	o.Linked = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SaaS) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SaaS) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *SaaS) SetCategory(v string) {
	o.Category = &v
}

// GetUsageStatistic returns the UsageStatistic field value if set, zero value otherwise.
func (o *SaaS) GetUsageStatistic() string {
	if o == nil || o.UsageStatistic == nil {
		var ret string
		return ret
	}
	return *o.UsageStatistic
}

// GetUsageStatisticOk returns a tuple with the UsageStatistic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetUsageStatisticOk() (*string, bool) {
	if o == nil || o.UsageStatistic == nil {
		return nil, false
	}
	return o.UsageStatistic, true
}

// HasUsageStatistic returns a boolean if a field has been set.
func (o *SaaS) HasUsageStatistic() bool {
	if o != nil && o.UsageStatistic != nil {
		return true
	}

	return false
}

// SetUsageStatistic gets a reference to the given string and assigns it to the UsageStatistic field.
func (o *SaaS) SetUsageStatistic(v string) {
	o.UsageStatistic = &v
}

// GetUsageHistory returns the UsageHistory field value if set, zero value otherwise.
func (o *SaaS) GetUsageHistory() string {
	if o == nil || o.UsageHistory == nil {
		var ret string
		return ret
	}
	return *o.UsageHistory
}

// GetUsageHistoryOk returns a tuple with the UsageHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetUsageHistoryOk() (*string, bool) {
	if o == nil || o.UsageHistory == nil {
		return nil, false
	}
	return o.UsageHistory, true
}

// HasUsageHistory returns a boolean if a field has been set.
func (o *SaaS) HasUsageHistory() bool {
	if o != nil && o.UsageHistory != nil {
		return true
	}

	return false
}

// SetUsageHistory gets a reference to the given string and assigns it to the UsageHistory field.
func (o *SaaS) SetUsageHistory(v string) {
	o.UsageHistory = &v
}

// GetLinkKey returns the LinkKey field value
func (o *SaaS) GetLinkKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkKey
}

// GetLinkKeyOk returns a tuple with the LinkKey field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetLinkKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkKey, true
}

// SetLinkKey sets field value
func (o *SaaS) SetLinkKey(v string) {
	o.LinkKey = v
}

// GetPublisher returns the Publisher field value if set, zero value otherwise.
func (o *SaaS) GetPublisher() string {
	if o == nil || o.Publisher == nil {
		var ret string
		return ret
	}
	return *o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetPublisherOk() (*string, bool) {
	if o == nil || o.Publisher == nil {
		return nil, false
	}
	return o.Publisher, true
}

// HasPublisher returns a boolean if a field has been set.
func (o *SaaS) HasPublisher() bool {
	if o != nil && o.Publisher != nil {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given string and assigns it to the Publisher field.
func (o *SaaS) SetPublisher(v string) {
	o.Publisher = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SaaS) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SaaS) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SaaS) SetUrl(v string) {
	o.Url = &v
}

// GetSource returns the Source field value
func (o *SaaS) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *SaaS) SetSource(v string) {
	o.Source = v
}

// GetIgnored returns the Ignored field value
func (o *SaaS) GetIgnored() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetIgnoredOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ignored, true
}

// SetIgnored sets field value
func (o *SaaS) SetIgnored(v string) {
	o.Ignored = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SaaS) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SaaS) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SaaS) SetVersion(v string) {
	o.Version = &v
}

// GetVisited returns the Visited field value if set, zero value otherwise.
func (o *SaaS) GetVisited() int32 {
	if o == nil || o.Visited == nil {
		var ret int32
		return ret
	}
	return *o.Visited
}

// GetVisitedOk returns a tuple with the Visited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetVisitedOk() (*int32, bool) {
	if o == nil || o.Visited == nil {
		return nil, false
	}
	return o.Visited, true
}

// HasVisited returns a boolean if a field has been set.
func (o *SaaS) HasVisited() bool {
	if o != nil && o.Visited != nil {
		return true
	}

	return false
}

// SetVisited gets a reference to the given int32 and assigns it to the Visited field.
func (o *SaaS) SetVisited(v int32) {
	o.Visited = &v
}

// GetAvailableLicenses returns the AvailableLicenses field value if set, zero value otherwise.
func (o *SaaS) GetAvailableLicenses() int32 {
	if o == nil || o.AvailableLicenses == nil {
		var ret int32
		return ret
	}
	return *o.AvailableLicenses
}

// GetAvailableLicensesOk returns a tuple with the AvailableLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetAvailableLicensesOk() (*int32, bool) {
	if o == nil || o.AvailableLicenses == nil {
		return nil, false
	}
	return o.AvailableLicenses, true
}

// HasAvailableLicenses returns a boolean if a field has been set.
func (o *SaaS) HasAvailableLicenses() bool {
	if o != nil && o.AvailableLicenses != nil {
		return true
	}

	return false
}

// SetAvailableLicenses gets a reference to the given int32 and assigns it to the AvailableLicenses field.
func (o *SaaS) SetAvailableLicenses(v int32) {
	o.AvailableLicenses = &v
}

// GetAnnualSpend returns the AnnualSpend field value if set, zero value otherwise.
func (o *SaaS) GetAnnualSpend() float32 {
	if o == nil || o.AnnualSpend == nil {
		var ret float32
		return ret
	}
	return *o.AnnualSpend
}

// GetAnnualSpendOk returns a tuple with the AnnualSpend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetAnnualSpendOk() (*float32, bool) {
	if o == nil || o.AnnualSpend == nil {
		return nil, false
	}
	return o.AnnualSpend, true
}

// HasAnnualSpend returns a boolean if a field has been set.
func (o *SaaS) HasAnnualSpend() bool {
	if o != nil && o.AnnualSpend != nil {
		return true
	}

	return false
}

// SetAnnualSpend gets a reference to the given float32 and assigns it to the AnnualSpend field.
func (o *SaaS) SetAnnualSpend(v float32) {
	o.AnnualSpend = &v
}

// GetRenewalDate returns the RenewalDate field value if set, zero value otherwise.
func (o *SaaS) GetRenewalDate() string {
	if o == nil || o.RenewalDate == nil {
		var ret string
		return ret
	}
	return *o.RenewalDate
}

// GetRenewalDateOk returns a tuple with the RenewalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetRenewalDateOk() (*string, bool) {
	if o == nil || o.RenewalDate == nil {
		return nil, false
	}
	return o.RenewalDate, true
}

// HasRenewalDate returns a boolean if a field has been set.
func (o *SaaS) HasRenewalDate() bool {
	if o != nil && o.RenewalDate != nil {
		return true
	}

	return false
}

// SetRenewalDate gets a reference to the given string and assigns it to the RenewalDate field.
func (o *SaaS) SetRenewalDate(v string) {
	o.RenewalDate = &v
}

// GetChangedate returns the Changedate field value
func (o *SaaS) GetChangedate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Changedate
}

// GetChangedateOk returns a tuple with the Changedate field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetChangedateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Changedate, true
}

// SetChangedate sets field value
func (o *SaaS) SetChangedate(v string) {
	o.Changedate = v
}

// GetChangedby returns the Changedby field value
func (o *SaaS) GetChangedby() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Changedby
}

// GetChangedbyOk returns a tuple with the Changedby field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetChangedbyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Changedby, true
}

// SetChangedby sets field value
func (o *SaaS) SetChangedby(v string) {
	o.Changedby = v
}

// GetCreationdate returns the Creationdate field value
func (o *SaaS) GetCreationdate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Creationdate
}

// GetCreationdateOk returns a tuple with the Creationdate field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetCreationdateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Creationdate, true
}

// SetCreationdate sets field value
func (o *SaaS) SetCreationdate(v string) {
	o.Creationdate = v
}

// GetCreatedby returns the Createdby field value
func (o *SaaS) GetCreatedby() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Createdby
}

// GetCreatedbyOk returns a tuple with the Createdby field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetCreatedbyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Createdby, true
}

// SetCreatedby sets field value
func (o *SaaS) SetCreatedby(v string) {
	o.Createdby = v
}

// GetSaasId returns the SaasId field value if set, zero value otherwise.
func (o *SaaS) GetSaasId() int32 {
	if o == nil || o.SaasId == nil {
		var ret int32
		return ret
	}
	return *o.SaasId
}

// GetSaasIdOk returns a tuple with the SaasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetSaasIdOk() (*int32, bool) {
	if o == nil || o.SaasId == nil {
		return nil, false
	}
	return o.SaasId, true
}

// HasSaasId returns a boolean if a field has been set.
func (o *SaaS) HasSaasId() bool {
	if o != nil && o.SaasId != nil {
		return true
	}

	return false
}

// SetSaasId gets a reference to the given int32 and assigns it to the SaasId field.
func (o *SaaS) SetSaasId(v int32) {
	o.SaasId = &v
}

// GetHash returns the Hash field value
func (o *SaaS) GetHash() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *SaaS) GetHashOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *SaaS) SetHash(v bool) {
	o.Hash = v
}

// GetTotalLicenses returns the TotalLicenses field value if set, zero value otherwise.
func (o *SaaS) GetTotalLicenses() int32 {
	if o == nil || o.TotalLicenses == nil {
		var ret int32
		return ret
	}
	return *o.TotalLicenses
}

// GetTotalLicensesOk returns a tuple with the TotalLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetTotalLicensesOk() (*int32, bool) {
	if o == nil || o.TotalLicenses == nil {
		return nil, false
	}
	return o.TotalLicenses, true
}

// HasTotalLicenses returns a boolean if a field has been set.
func (o *SaaS) HasTotalLicenses() bool {
	if o != nil && o.TotalLicenses != nil {
		return true
	}

	return false
}

// SetTotalLicenses gets a reference to the given int32 and assigns it to the TotalLicenses field.
func (o *SaaS) SetTotalLicenses(v int32) {
	o.TotalLicenses = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *SaaS) GetDeleted() string {
	if o == nil || o.Deleted == nil {
		var ret string
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetDeletedOk() (*string, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *SaaS) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given string and assigns it to the Deleted field.
func (o *SaaS) SetDeleted(v string) {
	o.Deleted = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *SaaS) GetUid() int32 {
	if o == nil || o.Uid == nil {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetUidOk() (*int32, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *SaaS) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *SaaS) SetUid(v int32) {
	o.Uid = &v
}

// GetIsInf returns the IsInf field value if set, zero value otherwise.
func (o *SaaS) GetIsInf() bool {
	if o == nil || o.IsInf == nil {
		var ret bool
		return ret
	}
	return *o.IsInf
}

// GetIsInfOk returns a tuple with the IsInf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaS) GetIsInfOk() (*bool, bool) {
	if o == nil || o.IsInf == nil {
		return nil, false
	}
	return o.IsInf, true
}

// HasIsInf returns a boolean if a field has been set.
func (o *SaaS) HasIsInf() bool {
	if o != nil && o.IsInf != nil {
		return true
	}

	return false
}

// SetIsInf gets a reference to the given bool and assigns it to the IsInf field.
func (o *SaaS) SetIsInf(v bool) {
	o.IsInf = &v
}

func (o SaaS) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["saas_name"] = o.SaasName
	}
	if true {
		toSerialize["linked"] = o.Linked
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.UsageStatistic != nil {
		toSerialize["usage_statistic"] = o.UsageStatistic
	}
	if o.UsageHistory != nil {
		toSerialize["usage_history"] = o.UsageHistory
	}
	if true {
		toSerialize["link_key"] = o.LinkKey
	}
	if o.Publisher != nil {
		toSerialize["publisher"] = o.Publisher
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["ignored"] = o.Ignored
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Visited != nil {
		toSerialize["visited"] = o.Visited
	}
	if o.AvailableLicenses != nil {
		toSerialize["available_licenses"] = o.AvailableLicenses
	}
	if o.AnnualSpend != nil {
		toSerialize["annual_spend"] = o.AnnualSpend
	}
	if o.RenewalDate != nil {
		toSerialize["renewal_date"] = o.RenewalDate
	}
	if true {
		toSerialize["changedate"] = o.Changedate
	}
	if true {
		toSerialize["changedby"] = o.Changedby
	}
	if true {
		toSerialize["creationdate"] = o.Creationdate
	}
	if true {
		toSerialize["createdby"] = o.Createdby
	}
	if o.SaasId != nil {
		toSerialize["saas_id"] = o.SaasId
	}
	if true {
		toSerialize["hash"] = o.Hash
	}
	if o.TotalLicenses != nil {
		toSerialize["total_licenses"] = o.TotalLicenses
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.IsInf != nil {
		toSerialize["is_inf"] = o.IsInf
	}
	return json.Marshal(toSerialize)
}

type NullableSaaS struct {
	value *SaaS
	isSet bool
}

func (v NullableSaaS) Get() *SaaS {
	return v.value
}

func (v *NullableSaaS) Set(val *SaaS) {
	v.value = val
	v.isSet = true
}

func (v NullableSaaS) IsSet() bool {
	return v.isSet
}

func (v *NullableSaaS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaaS(val *SaaS) *NullableSaaS {
	return &NullableSaaS{value: val, isSet: true}
}

func (v NullableSaaS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaaS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


