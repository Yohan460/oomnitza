/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SaaSUserManageObject struct for SaaSUserManageObject
type SaaSUserManageObject struct {
	UserExternalId string `json:"user_external_id"`
}

// NewSaaSUserManageObject instantiates a new SaaSUserManageObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaaSUserManageObject(userExternalId string) *SaaSUserManageObject {
	this := SaaSUserManageObject{}
	this.UserExternalId = userExternalId
	return &this
}

// NewSaaSUserManageObjectWithDefaults instantiates a new SaaSUserManageObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaaSUserManageObjectWithDefaults() *SaaSUserManageObject {
	this := SaaSUserManageObject{}
	return &this
}

// GetUserExternalId returns the UserExternalId field value
func (o *SaaSUserManageObject) GetUserExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserExternalId
}

// GetUserExternalIdOk returns a tuple with the UserExternalId field value
// and a boolean to check if the value has been set.
func (o *SaaSUserManageObject) GetUserExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserExternalId, true
}

// SetUserExternalId sets field value
func (o *SaaSUserManageObject) SetUserExternalId(v string) {
	o.UserExternalId = v
}

func (o SaaSUserManageObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user_external_id"] = o.UserExternalId
	}
	return json.Marshal(toSerialize)
}

type NullableSaaSUserManageObject struct {
	value *SaaSUserManageObject
	isSet bool
}

func (v NullableSaaSUserManageObject) Get() *SaaSUserManageObject {
	return v.value
}

func (v *NullableSaaSUserManageObject) Set(val *SaaSUserManageObject) {
	v.value = val
	v.isSet = true
}

func (v NullableSaaSUserManageObject) IsSet() bool {
	return v.isSet
}

func (v *NullableSaaSUserManageObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaaSUserManageObject(val *SaaSUserManageObject) *NullableSaaSUserManageObject {
	return &NullableSaaSUserManageObject{value: val, isSet: true}
}

func (v NullableSaaSUserManageObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaaSUserManageObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


