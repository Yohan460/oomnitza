/*
External API

## Date type fields API endpoints expected date in UTCÂ±0:00 timezone. Timezones in ISO8601 format will be ignored. API endpoints support date in two formats (one of): ISO8601 ('YYYY-MM-DDTHH:mm:SSZ') or Unix Timestamp (seconds count since January 1st, 1970 at UTC).  ## Dropdown fields Some fields are configured as dropdown fields with a dedicated list of values within Oomnitza. You can review the list of available dropdown values within the customization page in Oomnitza. In case you want to be able to post any data into these fields, you should switch them to dropdown without value within the customization page. 

API version: 3.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oomnitza

import (
	"encoding/json"
)

// Stockroom struct for Stockroom
type Stockroom struct {
	StockroomId *string `json:"stockroom_id,omitempty"`
	StockroomName *string `json:"stockroom_name,omitempty"`
	Location *string `json:"location,omitempty"`
	ShippingAddress *string `json:"shipping_address,omitempty"`
	DefaultSpoc *string `json:"default_spoc,omitempty"`
	AccessoriesMinLimit *int32 `json:"accessories_min_limit,omitempty"`
	AccessoriesMaxLimit *int32 `json:"accessories_max_limit,omitempty"`
	QuantityReplenishBy *int32 `json:"quantity_replenish_by,omitempty"`
	LoanPeriod *int32 `json:"loan_period,omitempty"`
	ShowNewAndUsed *bool `json:"show_new_and_used,omitempty"`
	AllowReturnNotAssigned *bool `json:"allow_return_not_assigned,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	CreationDate *int32 `json:"creation_date,omitempty"`
	ChangedBy *string `json:"changed_by,omitempty"`
	ChangeDate *int32 `json:"change_date,omitempty"`
	Version *string `json:"version,omitempty"`
	Deleted *string `json:"deleted,omitempty"`
	Uid *int32 `json:"uid,omitempty"`
}

// NewStockroom instantiates a new Stockroom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStockroom() *Stockroom {
	this := Stockroom{}
	return &this
}

// NewStockroomWithDefaults instantiates a new Stockroom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStockroomWithDefaults() *Stockroom {
	this := Stockroom{}
	return &this
}

// GetStockroomId returns the StockroomId field value if set, zero value otherwise.
func (o *Stockroom) GetStockroomId() string {
	if o == nil || o.StockroomId == nil {
		var ret string
		return ret
	}
	return *o.StockroomId
}

// GetStockroomIdOk returns a tuple with the StockroomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetStockroomIdOk() (*string, bool) {
	if o == nil || o.StockroomId == nil {
		return nil, false
	}
	return o.StockroomId, true
}

// HasStockroomId returns a boolean if a field has been set.
func (o *Stockroom) HasStockroomId() bool {
	if o != nil && o.StockroomId != nil {
		return true
	}

	return false
}

// SetStockroomId gets a reference to the given string and assigns it to the StockroomId field.
func (o *Stockroom) SetStockroomId(v string) {
	o.StockroomId = &v
}

// GetStockroomName returns the StockroomName field value if set, zero value otherwise.
func (o *Stockroom) GetStockroomName() string {
	if o == nil || o.StockroomName == nil {
		var ret string
		return ret
	}
	return *o.StockroomName
}

// GetStockroomNameOk returns a tuple with the StockroomName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetStockroomNameOk() (*string, bool) {
	if o == nil || o.StockroomName == nil {
		return nil, false
	}
	return o.StockroomName, true
}

// HasStockroomName returns a boolean if a field has been set.
func (o *Stockroom) HasStockroomName() bool {
	if o != nil && o.StockroomName != nil {
		return true
	}

	return false
}

// SetStockroomName gets a reference to the given string and assigns it to the StockroomName field.
func (o *Stockroom) SetStockroomName(v string) {
	o.StockroomName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *Stockroom) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *Stockroom) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *Stockroom) SetLocation(v string) {
	o.Location = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *Stockroom) GetShippingAddress() string {
	if o == nil || o.ShippingAddress == nil {
		var ret string
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetShippingAddressOk() (*string, bool) {
	if o == nil || o.ShippingAddress == nil {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *Stockroom) HasShippingAddress() bool {
	if o != nil && o.ShippingAddress != nil {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given string and assigns it to the ShippingAddress field.
func (o *Stockroom) SetShippingAddress(v string) {
	o.ShippingAddress = &v
}

// GetDefaultSpoc returns the DefaultSpoc field value if set, zero value otherwise.
func (o *Stockroom) GetDefaultSpoc() string {
	if o == nil || o.DefaultSpoc == nil {
		var ret string
		return ret
	}
	return *o.DefaultSpoc
}

// GetDefaultSpocOk returns a tuple with the DefaultSpoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetDefaultSpocOk() (*string, bool) {
	if o == nil || o.DefaultSpoc == nil {
		return nil, false
	}
	return o.DefaultSpoc, true
}

// HasDefaultSpoc returns a boolean if a field has been set.
func (o *Stockroom) HasDefaultSpoc() bool {
	if o != nil && o.DefaultSpoc != nil {
		return true
	}

	return false
}

// SetDefaultSpoc gets a reference to the given string and assigns it to the DefaultSpoc field.
func (o *Stockroom) SetDefaultSpoc(v string) {
	o.DefaultSpoc = &v
}

// GetAccessoriesMinLimit returns the AccessoriesMinLimit field value if set, zero value otherwise.
func (o *Stockroom) GetAccessoriesMinLimit() int32 {
	if o == nil || o.AccessoriesMinLimit == nil {
		var ret int32
		return ret
	}
	return *o.AccessoriesMinLimit
}

// GetAccessoriesMinLimitOk returns a tuple with the AccessoriesMinLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetAccessoriesMinLimitOk() (*int32, bool) {
	if o == nil || o.AccessoriesMinLimit == nil {
		return nil, false
	}
	return o.AccessoriesMinLimit, true
}

// HasAccessoriesMinLimit returns a boolean if a field has been set.
func (o *Stockroom) HasAccessoriesMinLimit() bool {
	if o != nil && o.AccessoriesMinLimit != nil {
		return true
	}

	return false
}

// SetAccessoriesMinLimit gets a reference to the given int32 and assigns it to the AccessoriesMinLimit field.
func (o *Stockroom) SetAccessoriesMinLimit(v int32) {
	o.AccessoriesMinLimit = &v
}

// GetAccessoriesMaxLimit returns the AccessoriesMaxLimit field value if set, zero value otherwise.
func (o *Stockroom) GetAccessoriesMaxLimit() int32 {
	if o == nil || o.AccessoriesMaxLimit == nil {
		var ret int32
		return ret
	}
	return *o.AccessoriesMaxLimit
}

// GetAccessoriesMaxLimitOk returns a tuple with the AccessoriesMaxLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetAccessoriesMaxLimitOk() (*int32, bool) {
	if o == nil || o.AccessoriesMaxLimit == nil {
		return nil, false
	}
	return o.AccessoriesMaxLimit, true
}

// HasAccessoriesMaxLimit returns a boolean if a field has been set.
func (o *Stockroom) HasAccessoriesMaxLimit() bool {
	if o != nil && o.AccessoriesMaxLimit != nil {
		return true
	}

	return false
}

// SetAccessoriesMaxLimit gets a reference to the given int32 and assigns it to the AccessoriesMaxLimit field.
func (o *Stockroom) SetAccessoriesMaxLimit(v int32) {
	o.AccessoriesMaxLimit = &v
}

// GetQuantityReplenishBy returns the QuantityReplenishBy field value if set, zero value otherwise.
func (o *Stockroom) GetQuantityReplenishBy() int32 {
	if o == nil || o.QuantityReplenishBy == nil {
		var ret int32
		return ret
	}
	return *o.QuantityReplenishBy
}

// GetQuantityReplenishByOk returns a tuple with the QuantityReplenishBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetQuantityReplenishByOk() (*int32, bool) {
	if o == nil || o.QuantityReplenishBy == nil {
		return nil, false
	}
	return o.QuantityReplenishBy, true
}

// HasQuantityReplenishBy returns a boolean if a field has been set.
func (o *Stockroom) HasQuantityReplenishBy() bool {
	if o != nil && o.QuantityReplenishBy != nil {
		return true
	}

	return false
}

// SetQuantityReplenishBy gets a reference to the given int32 and assigns it to the QuantityReplenishBy field.
func (o *Stockroom) SetQuantityReplenishBy(v int32) {
	o.QuantityReplenishBy = &v
}

// GetLoanPeriod returns the LoanPeriod field value if set, zero value otherwise.
func (o *Stockroom) GetLoanPeriod() int32 {
	if o == nil || o.LoanPeriod == nil {
		var ret int32
		return ret
	}
	return *o.LoanPeriod
}

// GetLoanPeriodOk returns a tuple with the LoanPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetLoanPeriodOk() (*int32, bool) {
	if o == nil || o.LoanPeriod == nil {
		return nil, false
	}
	return o.LoanPeriod, true
}

// HasLoanPeriod returns a boolean if a field has been set.
func (o *Stockroom) HasLoanPeriod() bool {
	if o != nil && o.LoanPeriod != nil {
		return true
	}

	return false
}

// SetLoanPeriod gets a reference to the given int32 and assigns it to the LoanPeriod field.
func (o *Stockroom) SetLoanPeriod(v int32) {
	o.LoanPeriod = &v
}

// GetShowNewAndUsed returns the ShowNewAndUsed field value if set, zero value otherwise.
func (o *Stockroom) GetShowNewAndUsed() bool {
	if o == nil || o.ShowNewAndUsed == nil {
		var ret bool
		return ret
	}
	return *o.ShowNewAndUsed
}

// GetShowNewAndUsedOk returns a tuple with the ShowNewAndUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetShowNewAndUsedOk() (*bool, bool) {
	if o == nil || o.ShowNewAndUsed == nil {
		return nil, false
	}
	return o.ShowNewAndUsed, true
}

// HasShowNewAndUsed returns a boolean if a field has been set.
func (o *Stockroom) HasShowNewAndUsed() bool {
	if o != nil && o.ShowNewAndUsed != nil {
		return true
	}

	return false
}

// SetShowNewAndUsed gets a reference to the given bool and assigns it to the ShowNewAndUsed field.
func (o *Stockroom) SetShowNewAndUsed(v bool) {
	o.ShowNewAndUsed = &v
}

// GetAllowReturnNotAssigned returns the AllowReturnNotAssigned field value if set, zero value otherwise.
func (o *Stockroom) GetAllowReturnNotAssigned() bool {
	if o == nil || o.AllowReturnNotAssigned == nil {
		var ret bool
		return ret
	}
	return *o.AllowReturnNotAssigned
}

// GetAllowReturnNotAssignedOk returns a tuple with the AllowReturnNotAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetAllowReturnNotAssignedOk() (*bool, bool) {
	if o == nil || o.AllowReturnNotAssigned == nil {
		return nil, false
	}
	return o.AllowReturnNotAssigned, true
}

// HasAllowReturnNotAssigned returns a boolean if a field has been set.
func (o *Stockroom) HasAllowReturnNotAssigned() bool {
	if o != nil && o.AllowReturnNotAssigned != nil {
		return true
	}

	return false
}

// SetAllowReturnNotAssigned gets a reference to the given bool and assigns it to the AllowReturnNotAssigned field.
func (o *Stockroom) SetAllowReturnNotAssigned(v bool) {
	o.AllowReturnNotAssigned = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *Stockroom) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *Stockroom) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *Stockroom) SetLocked(v bool) {
	o.Locked = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Stockroom) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Stockroom) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Stockroom) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *Stockroom) GetCreationDate() int32 {
	if o == nil || o.CreationDate == nil {
		var ret int32
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetCreationDateOk() (*int32, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *Stockroom) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int32 and assigns it to the CreationDate field.
func (o *Stockroom) SetCreationDate(v int32) {
	o.CreationDate = &v
}

// GetChangedBy returns the ChangedBy field value if set, zero value otherwise.
func (o *Stockroom) GetChangedBy() string {
	if o == nil || o.ChangedBy == nil {
		var ret string
		return ret
	}
	return *o.ChangedBy
}

// GetChangedByOk returns a tuple with the ChangedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetChangedByOk() (*string, bool) {
	if o == nil || o.ChangedBy == nil {
		return nil, false
	}
	return o.ChangedBy, true
}

// HasChangedBy returns a boolean if a field has been set.
func (o *Stockroom) HasChangedBy() bool {
	if o != nil && o.ChangedBy != nil {
		return true
	}

	return false
}

// SetChangedBy gets a reference to the given string and assigns it to the ChangedBy field.
func (o *Stockroom) SetChangedBy(v string) {
	o.ChangedBy = &v
}

// GetChangeDate returns the ChangeDate field value if set, zero value otherwise.
func (o *Stockroom) GetChangeDate() int32 {
	if o == nil || o.ChangeDate == nil {
		var ret int32
		return ret
	}
	return *o.ChangeDate
}

// GetChangeDateOk returns a tuple with the ChangeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetChangeDateOk() (*int32, bool) {
	if o == nil || o.ChangeDate == nil {
		return nil, false
	}
	return o.ChangeDate, true
}

// HasChangeDate returns a boolean if a field has been set.
func (o *Stockroom) HasChangeDate() bool {
	if o != nil && o.ChangeDate != nil {
		return true
	}

	return false
}

// SetChangeDate gets a reference to the given int32 and assigns it to the ChangeDate field.
func (o *Stockroom) SetChangeDate(v int32) {
	o.ChangeDate = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Stockroom) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Stockroom) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Stockroom) SetVersion(v string) {
	o.Version = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Stockroom) GetDeleted() string {
	if o == nil || o.Deleted == nil {
		var ret string
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetDeletedOk() (*string, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Stockroom) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given string and assigns it to the Deleted field.
func (o *Stockroom) SetDeleted(v string) {
	o.Deleted = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *Stockroom) GetUid() int32 {
	if o == nil || o.Uid == nil {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stockroom) GetUidOk() (*int32, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *Stockroom) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *Stockroom) SetUid(v int32) {
	o.Uid = &v
}

func (o Stockroom) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StockroomId != nil {
		toSerialize["stockroom_id"] = o.StockroomId
	}
	if o.StockroomName != nil {
		toSerialize["stockroom_name"] = o.StockroomName
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.ShippingAddress != nil {
		toSerialize["shipping_address"] = o.ShippingAddress
	}
	if o.DefaultSpoc != nil {
		toSerialize["default_spoc"] = o.DefaultSpoc
	}
	if o.AccessoriesMinLimit != nil {
		toSerialize["accessories_min_limit"] = o.AccessoriesMinLimit
	}
	if o.AccessoriesMaxLimit != nil {
		toSerialize["accessories_max_limit"] = o.AccessoriesMaxLimit
	}
	if o.QuantityReplenishBy != nil {
		toSerialize["quantity_replenish_by"] = o.QuantityReplenishBy
	}
	if o.LoanPeriod != nil {
		toSerialize["loan_period"] = o.LoanPeriod
	}
	if o.ShowNewAndUsed != nil {
		toSerialize["show_new_and_used"] = o.ShowNewAndUsed
	}
	if o.AllowReturnNotAssigned != nil {
		toSerialize["allow_return_not_assigned"] = o.AllowReturnNotAssigned
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.CreationDate != nil {
		toSerialize["creation_date"] = o.CreationDate
	}
	if o.ChangedBy != nil {
		toSerialize["changed_by"] = o.ChangedBy
	}
	if o.ChangeDate != nil {
		toSerialize["change_date"] = o.ChangeDate
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	return json.Marshal(toSerialize)
}

type NullableStockroom struct {
	value *Stockroom
	isSet bool
}

func (v NullableStockroom) Get() *Stockroom {
	return v.value
}

func (v *NullableStockroom) Set(val *Stockroom) {
	v.value = val
	v.isSet = true
}

func (v NullableStockroom) IsSet() bool {
	return v.isSet
}

func (v *NullableStockroom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStockroom(val *Stockroom) *NullableStockroom {
	return &NullableStockroom{value: val, isSet: true}
}

func (v NullableStockroom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStockroom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


